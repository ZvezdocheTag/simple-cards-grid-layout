{"version":3,"sources":["logo.svg","components/Card/index.js","components/Notification/index.js","components/CardsList/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","title","text","url","message","toggleNotification","className","src","alt","style","marginBottom","onClick","Notification","length","dummyData","CardsList","useState","notificationMessage","map","cardItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,yBCGA,SAASA,EAAT,GAOX,IANAC,EAMD,EANCA,MACAC,EAKD,EALCA,MACAC,EAID,EAJCA,KACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,QACAC,EACD,EADCA,mBAEA,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,WAAWC,IAAKP,EAAOQ,IAAI,OAE9C,sBAAKF,UAAU,eAAf,UACI,qBAAKA,UAAU,aAAaG,MAAO,CAAEC,aAAc,IAAnD,SACKT,IAEL,qBAAKK,UAAU,YAAYG,MAAO,CAAEC,aAAc,IAAlD,SACKR,IAEL,wBACII,UAAU,0BACVK,QAAS,kBACLN,EAAmBF,IAAQC,EAAU,GAAKD,IAHlD,wB,MCpBD,SAASS,EAAT,GAAoC,IAAZR,EAAW,EAAXA,QACnC,OACI,qBAAKE,UAAS,uBAAkBF,EAAQS,OAAS,YAAc,IAA/D,SACKT,GAAW,QCFxB,IAAMU,EAAY,CACd,CACIb,MAAO,SACPC,KAAM,iBACNF,MAAO,0CACPG,IAAK,UAET,CACIF,MAAO,SACPC,KAAM,iBACNF,MAAO,0CACPG,IAAK,UAET,CACIF,MAAO,SACPC,KAAM,iBACNF,MAAO,4CACPG,IAAK,UAET,CACIF,MAAO,SACPC,KAAM,iBACNF,MAAO,4CACPG,IAAK,UAET,CACIF,MAAO,SACPC,KAAM,iBACNF,MAAO,yCACPG,IAAK,UAET,CACIF,MAAO,SACPC,KAAM,iBACNF,MAAO,8CACPG,IAAK,WAIE,SAASY,IAAa,IAAD,EACkBC,mBAAS,IAD3B,mBACzBC,EADyB,KACJZ,EADI,KAGhC,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIG,MAAO,CAAEC,aAAc,IAA3B,2BACA,qBAAKJ,UAAU,aAAf,SACKQ,EAAUI,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,2BACQA,GADR,IAEIf,QAASa,EACTZ,mBAAoBA,UAIhC,cAAC,EAAD,CAAcD,QAASa,OC7CpBG,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAACS,EAAD,OCISM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c644e0ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './Card.css'\n\nexport default function Card({\n    image,\n    title,\n    text,\n    url,\n    message,\n    toggleNotification,\n}) {\n    return (\n        <div className=\"card\">\n            <div className=\"card_img-wrap\">\n                <img className=\"card_img\" src={image} alt=\"\" />\n            </div>\n            <div className=\"card_content\">\n                <div className=\"card_title\" style={{ marginBottom: 16 }}>\n                    {title}\n                </div>\n                <div className=\"card_text\" style={{ marginBottom: 12 }}>\n                    {text}\n                </div>\n                <button\n                    className=\"card_btn primary-button\"\n                    onClick={() =>\n                        toggleNotification(url === message ? '' : url)\n                    }\n                >\n                    OPEN\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Notification.css'\n\nexport default function Notification({ message }) {\n    return (\n        <div className={`notification ${message.length ? 'is-active' : ''}`}>\n            {message || 'hey'}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from '../Card'\nimport Notification from '../Notification'\n\nconst dummyData = [\n    {\n        title: 'Card 1',\n        text: 'some content 1',\n        image: 'http://source.unsplash.com/400x300?city',\n        url: '/page1',\n    },\n    {\n        title: 'Card 2',\n        text: 'some content 2',\n        image: 'http://source.unsplash.com/400x300?food',\n        url: '/page2',\n    },\n    {\n        title: 'Card 3',\n        text: 'some content 3',\n        image: 'http://source.unsplash.com/400x300?coffee',\n        url: '/page3',\n    },\n    {\n        title: 'Card 4',\n        text: 'some content 4',\n        image: 'http://source.unsplash.com/400x300?travel',\n        url: '/page4',\n    },\n    {\n        title: 'Card 5',\n        text: 'some content 5',\n        image: 'http://source.unsplash.com/400x300?art',\n        url: '/page5',\n    },\n    {\n        title: 'Card 6',\n        text: 'some content 6',\n        image: 'http://source.unsplash.com/400x300?mountain',\n        url: '/page6',\n    },\n]\n\nexport default function CardsList() {\n    const [notificationMessage, toggleNotification] = useState('')\n\n    return (\n        <div className=\"container\">\n            <h3 style={{ marginBottom: 35 }}>List of cards</h3>\n            <div className=\"cards-list\">\n                {dummyData.map((cardItem) => (\n                    <Card\n                        {...cardItem}\n                        message={notificationMessage}\n                        toggleNotification={toggleNotification}\n                    />\n                ))}\n            </div>\n            <Notification message={notificationMessage} />\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport CardsList from './components/CardsList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normilize.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"typeface-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}